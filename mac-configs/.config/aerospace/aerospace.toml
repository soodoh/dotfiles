# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 5
outer.top = [{ monitor."Built-in" = 5 }, 40]
outer.right = 10
outer.bottom = 10
outer.left = 10

[mode.main.binding]
alt-ctrl-shift-enter = 'exec-and-forget open -a Alacritty'
# Opens default web browser
cmd-alt-ctrl-shift-enter = 'exec-and-forget /usr/libexec/PlistBuddy -c "Print :LSHandlers" ~/Library/Preferences/com.apple.LaunchServices/com.apple.launchservices.secure.plist | awk "/LSHandlerContentType.*default-app\.web-browser/{flag=1} flag && /LSHandlerRoleAll = /{gsub(/.* = /,\"\"); gsub(/;/,\"\"); print; exit}" | xargs open -b'

cmd-h = []     # Disable "hide application"
cmd-alt-h = [] # Disable "hide others"

alt-ctrl-shift-h = 'focus left --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
alt-ctrl-shift-j = 'focus down --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
alt-ctrl-shift-k = 'focus up --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
alt-ctrl-shift-l = 'focus right --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'

cmd-alt-ctrl-shift-h = 'move left --boundaries all-monitors-outer-frame --boundaries-action create-implicit-container'
cmd-alt-ctrl-shift-j = 'move down --boundaries all-monitors-outer-frame --boundaries-action create-implicit-container'
cmd-alt-ctrl-shift-k = 'move up --boundaries all-monitors-outer-frame --boundaries-action create-implicit-container'
cmd-alt-ctrl-shift-l = 'move right --boundaries all-monitors-outer-frame --boundaries-action create-implicit-container'

alt-ctrl-shift-y = 'workspace 1'
alt-ctrl-shift-u = 'workspace 2'
alt-ctrl-shift-i = 'workspace 3'
alt-ctrl-shift-o = 'workspace 4'

cmd-alt-ctrl-shift-y = 'move-node-to-workspace --focus-follows-window 1'
cmd-alt-ctrl-shift-u = 'move-node-to-workspace --focus-follows-window 2'
cmd-alt-ctrl-shift-i = 'move-node-to-workspace --focus-follows-window 3'
cmd-alt-ctrl-shift-o = 'move-node-to-workspace --focus-follows-window 4'

alt-ctrl-shift-f = 'fullscreen'
alt-ctrl-shift-t = 'layout h_accordion tiles'         # 'layout tabbed' in i3
alt-ctrl-shift-s = 'layout tiles horizontal vertical' # 'layout toggle split' in i3
alt-ctrl-shift-space = 'layout floating tiling'       # 'floating toggle' in i3
alt-ctrl-shift-r = 'balance-sizes'

cmd-alt-ctrl-shift-v = 'reload-config'
cmd-alt-ctrl-shift-r = 'mode resize'

alt-ctrl-shift-w = 'move-workspace-to-monitor next'
cmd-alt-ctrl-shift-w = 'move-workspace-to-monitor prev'

[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
enter = ['balance-sizes', 'mode main']
esc = 'mode main'

# This prevents "move-workspace-to-monitor" from working
# [workspace-to-monitor-force-assignment]
# 1 = 'main'
# 2 = 'main'
# 3 = 'secondary'
# 4 = 'secondary'

# Automatically move applications to preferred workspace
# Main workspaces
[[on-window-detected]]
if.app-name-regex-substring = 'google chrome'
if.during-aerospace-startup = true
check-further-callbacks = true
run = ['move-node-to-workspace 1']

[[on-window-detected]]
if.app-name-regex-substring = 'alacritty'
if.during-aerospace-startup = true
check-further-callbacks = true
run = ['move-node-to-workspace 1']

# "Organization" apps
[[on-window-detected]]
if.app-name-regex-substring = 'calendar'
if.during-aerospace-startup = true
check-further-callbacks = true
run = ['move-node-to-workspace 2']

[[on-window-detected]]
if.app-name-regex-substring = 'slack'
if.during-aerospace-startup = true
check-further-callbacks = true
run = ['move-node-to-workspace 2']

[[on-window-detected]]
if.app-name-regex-substring = 'todoist'
if.during-aerospace-startup = true
check-further-callbacks = true
run = ['move-node-to-workspace 3']

# "Other" apps
[[on-window-detected]]
if.app-name-regex-substring = 'firefox'
if.during-aerospace-startup = true
check-further-callbacks = true
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'messages'
if.during-aerospace-startup = true
check-further-callbacks = true
run = ['move-node-to-workspace 4']
